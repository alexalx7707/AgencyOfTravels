@using TravelAgency3Presentation.Models.Enums
@model IEnumerable<Booking>
@{
    ViewData["Title"] = "Bookings";
}

<div class="container">
    <h1 class="my-4">Manage Bookings</h1>

    <div class="mb-3">
        <a asp-controller="Bookings" asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"></i> Create New Booking</a>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="bookingsTable">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Location</th>
                            <th>Customer</th>
                            <th>Dates</th>
                            <th>Guests</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var booking in Model)
                        {
                            <tr>
                                <td>@booking.Id</td>
                                <td>@booking.Location?.Name</td>
                                <td>@booking.CustomerName</td>
                                <td>
                                    @booking.CheckInDate.ToString("MM/dd/yyyy") - @booking.CheckOutDate.ToString("MM/dd/yyyy")
                                    <div class="text-muted small">
                                        (@((booking.CheckOutDate - booking.CheckInDate).Days) nights)
                                    </div>
                                </td>
                                <td>@booking.NumberOfGuests</td>
                                <td>$@booking.TotalPrice.ToString("F2")</td>
                                <td>
                                    @{
                                        string badgeClass = booking.Status switch
                                        {
                                            BookingStatus.Pending => "badge-warning",
                                            BookingStatus.Confirmed => "badge-success",
                                            BookingStatus.Cancelled => "badge-danger",
                                            BookingStatus.Completed => "badge-info",
                                            _ => "badge-secondary"
                                        };
                                    }
                                    <span class="badge @badgeClass">@booking.Status</span>
                                </td>
                                <td>@booking.CreatedAt.ToString("MM/dd/yyyy")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Details" asp-route-id="@booking.Id" class="btn btn-info btn-sm">Details</a>
                                        <a asp-action="Edit" asp-route-id="@booking.Id" class="btn btn-warning btn-sm">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@booking.Id" class="btn btn-danger btn-sm">Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#bookingsTable').DataTable({
                "order": [[0, "desc"]]
            });
        });
    </script>
}